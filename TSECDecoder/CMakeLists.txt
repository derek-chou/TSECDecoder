CMAKE_MINIMUM_REQUIRED (VERSION 2.6)

PROJECT(TSECDecoder)

LIST(APPEND CMAKE_MODULE_PATH "${CMAKE_CURRENT_LIST_DIR}/cmake")

FIND_PACKAGE(LibUV)
INCLUDE_DIRECTORIES(SYSTEM ${LIBUV_INCLUDE_DIRS})
FIND_PACKAGE(Iconv)
INCLUDE_DIRECTORIES(SYSTEM ${ICONV_INCLUDE_DIR})
FIND_PACKAGE(Log4c)
INCLUDE_DIRECTORIES(SYSTEM ${LOG4C_INCLUDE_DIR})
FIND_PACKAGE(libconfig)
INCLUDE_DIRECTORIES(SYSTEM ${LIBCONFIG_INCLUDE_DIR})

# SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/build)
# SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/build)
# SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/build)

# Directories
AUX_SOURCE_DIRECTORY(./ SRC_LIST)
AUX_SOURCE_DIRECTORY(./hiredis REDIS_SRC)
AUX_SOURCE_DIRECTORY(./libhl LIBHL_SRC)
LIST(APPEND SRC_LIST ${REDIS_SRC} ${LIBHL_SRC})

# Release mode
SET(CMAKE_BUILD_TYPE Debug)

# Compile flags
SET(CMAKE_C_FLAGS "-Werror")

# I like verbose, must after project, do not know why
SET(CMAKE_VERBOSE_MAKEFILE true)

# Where to include?
INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/hiredis;${PROJECT_SOURCE_DIR}/libhl;${LIBUV_INCLUDE_DIRS})


# Files to compile
ADD_EXECUTABLE(TSECDecoder ${SRC_LIST})

SET_PROPERTY(TARGET TSECDecoder PROPERTY C_STANDARD 99)

FIND_LIBRARY(LIBUV_LIBRARIES ${LIBUV_INCLUDE_DIRS})
TARGET_LINK_LIBRARIES(TSECDecoder PUBLIC ${LIBUV_LIBRARIES})

FIND_LIBRARY(ICONV_LIBRARIES ./)
TARGET_LINK_LIBRARIES(TSECDecoder PUBLIC ${ICONV_LIBRARIES})

FIND_LIBRARY(LOG4C_LIBRARIES ./)
TARGET_LINK_LIBRARIES(TSECDecoder PUBLIC ${LOG4C_LIBRARIES})

FIND_LIBRARY(LIBCONFIG_LIBRARIES ./)
TARGET_LINK_LIBRARIES(TSECDecoder PUBLIC ${LIBCONFIG_LIBRARIES})
